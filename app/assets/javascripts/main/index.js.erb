var pageLayout
var searchResultsLayout
var datatable, source_table, object_table

$(document).ready(function() {
  setup_layout()
  setup_west_pane()
  setup_datatables()
  refresh_datasets_tables()
});

 function check_algorithm_checkbox(algo_checkbox)
 {
  var found_check = false
  var algorithm_id

  $(algo_checkbox).each(function(index, check_box){
    algorithm_id = $(check_box).attr("algorithm_id")
      if($(check_box).is(':checked')){
        
        found_check= true
        $(' input:checked+label').css({'background-color':'lightgreen','color':'green'})
        $("h3.algorithm_"+algorithm_id).show()
      }
      else{
        $('[type="checkbox"]:not(:checked) + label').css({'background-color':'#FFCACA','color':'red'})
        $(".algorithm_"+algorithm_id).hide()
      }
      });
    if (found_check){
      
      $('#tabs').tabs("enable",1)

       if(($("table#dataset_table tr:last").index()+1)!=0 )
         $('#tabs').tabs("enable",2)
       else
         $('#tabs').tabs("disable",2)
    }
    else{
      
      $('#tabs').tabs("option", "disabled",[1,2])
    }
 }

function refresh_datatables()
{
  datatable.draw()
  source_table.draw()
  object_table.draw()
}

function refresh_datasets_tables()
{
  $.getJSON("/datasets", function(data){
    refresh_datasets_table(data.claims, 'claims')
    refresh_datasets_table(data.ground, 'ground')
  })
}

function refresh_datasets_table(datasets, dataset_kind)
{
  var items = ""
  $.each(datasets, function(key, value){
    items += "<tr><td>"+ value.id+"</td><td>"+value.original_filename+"</td><td>"+value.created_at
    +"</td><td>"+value.row_count+"</td><td> <span dataset_id='"+value.id+"' class='trash-icon ui-icon ui-icon-trash'></span></td></tr>"
  });
  var container= $("#datasets_" + dataset_kind + "_tbody")
     .empty()
     .append(items)
  $('.trash-icon', container).click(function(){
    if(confirm("Are you sure you want to delete this dataset?"))
     $.ajax({
       url: '/datasets/'+$(this).attr("dataset_id"),
       type: "DELETE",
       success: function(){
        refresh_datasets_tables();
        refresh_datatables();
       }
     });
   });
}

function setup_datatables() {
  datatable_excess = 100
  var height = searchResultsLayout.state.center.innerHeight - datatable_excess

  source_table = setup_single_datatable("source_id", height)
  object_table = setup_single_datatable("object_key", height)
   
  datatable = $('#datatable').DataTable({
    "serverSide": true,
    "scrollY": height,
    "dom": '<"toolbar"T>tSif',
    "ajax": function (data, callback, settings) {
      var url = "/dataset_rows"
      data.extra_source_id_criteria = source_table.search()
      data.extra_object_key_criteria = object_table.search()
      $.getJSON(url, data, function(response){
        callback(response)
      })
    },
    "columns": [
      {data: 'claim_id'},
      {data: 'object_key'},
      {data: 'property_key'},
      {data: 'property_value'},
      {data: 'source_id'},
      {data: 'timestamp'}
    ],
    "destroy": true,  // destroy first if reinitializing
    "scroller": {
      loadingIndicator: false
    },
    tableTools: {
      "sRowSelect": "os",
      "fnRowSelected": function ( nodes ) {
        var data = datatable.row(nodes[0]).data()
        $("#details").html("You have selected claim with id: " + data.claim_id+"")
      },
      "fnRowDeselected": function ( nodes ) {
        $("#details").html("")
      },
      "aButtons": []
    }
  });
}

function setup_single_datatable(field_name, height)
{
  var obj = $("#"+field_name+"_datatable")
  var dt = obj.DataTable({
    "serverSide": true,
    "scrollY": height,
    "ajax": function (data, callback, settings) {
      var url = "/dataset_rows"
      data.extra_only = field_name
      if (typeof datatable != 'undefined') datatable.draw()
      $.getJSON(url, data, function(response){
        callback(response)
      })
    },
    dom: 'T<"clear">tSif',
    "language": {
      "info": "_START_-_END_/_TOTAL_",
      "infoFiltered": " (_MAX_ total)",
      "infoEmpty": "0-0/0",
      "search": "",
      "zeroRecords": "No matches"
    },
    "destroy": true,  // destroy first if reinitializing
    "scroller": {
      loadingIndicator: false
    },
    tableTools: {
      "sRowSelect": "none",
     aButtons: []
    }
  });
  $("#"+field_name+"_datatable_filter input").attr("placeholder", "Search")
  return dt;
}

function setup_layout()
{
  pageLayout = $('body').layout({
    applyDefaultStyles: true,
    west__size: "30%",
    west__minSize: "10%",
    west__maxSize: "50%",
    west__onresize: function() {
      datatable.columns.adjust();
    },
    west__onclose: function() {
      datatable.columns.adjust();
    }
  });
  
  searchResultsLayout = $(".inner").layout({
    applyDefaultStyles: true,
    south__size: "15%",
    south__minSize: "25%",
    south__maxSize: "75%",
    west__size: '15%',
    center__size: '15%',
    east__size: '70%',
    autoResize:       true,  // try to maintain pane-percentages
    closable:       true,
    togglerLength_open:   0, // hide toggler-buttons
    spacing_closed:     0, // hide resizer/slider bar when closed
    autoReopen:       true,  // auto-open panes that were previously auto-closed due to 'no room'
    center__onresize: function() {
      setup_datatables()
    }
  });
}

function setup_west_pane()
{
  // tabs setup
  $( "#tabs" ).tabs();
  $( "#tabs" ).tabs({ disabled: [ 1, 2 ] });
  // create algorithm divs
  var container= $("#tab_pane")
  var html = ""
  $.each(algorithms, function(index, algorithm) {
    var params =""
    $.each(algorithm.params, function(pindex, param){
      params += "<tr><td width='100%'><span>" + param.name
        + "</span><span class='info-icon ui-icon ui-icon-info' title='"
        + param.desc + "'></span> </td><td><input class='spinner' min='"
        + param.min+"' max='"+param.max+"' value='"+param.value
        + "'></input></td></tr>" 
    });
    html += "<h3 class='algorithm_"+algorithm.id+"'>" + algorithm.name + "</h3><div class='algorithm_"+algorithm.id+"'><table cellpadding=0 cellspacing=0 width='100%' border=0 style ='border-collapse:collapse;'>"
      + params + "</table></div>"
  }); 
  container.append(html)

  // create spinners
  $(".spinner").spinner({
      step: 0.1,
      numberFormat: "n",
    }).each(function(){
      $(this).spinner('option', 'min', parseFloat($(this).attr("min")));
      $(this).spinner('option', 'max', parseFloat($(this).attr("max")));
    });

  // create Algorithm section in tab-1 under 3rd header
  var container = $("#algo_pane")
  var html =""

  $.each(algorithms, function(index, algorithm){
    if(index!= 0)
    html += "<input type='checkbox' id='algorithm_checkbox_"+algorithm.id+"' algorithm_id='"
  +algorithm.id+
  "' class='algorithm_checkbox color_on_check color_on_uncheck'/><label style='background:none;background-color:lightpink;color:red;' class='algorithm_checkbox_label' title='"
  +algorithm.description+"' for='algorithm_checkbox_"+algorithm.id+"'>"+algorithm.name +"</label>"
  });
  container.append(html);

  // create button checkbox
  $(".algorithm_checkbox")
    .button({icons: {primary: 'ui-icon-closethick'}})
    .change(function(){
      $(this).button("option", "icons", {primary: $(this).is(':checked') ? 'ui-icon-check' : 'ui-icon-closethick'})
     check_algorithm_checkbox(".algorithm_checkbox")

    });
    
  
  // create the accordion
  $( ".accordion" ).accordion({
    collapsible: true,
    active: false,
    heightStyle: "content",
  });

  // file upload
  var jqXHR= null;
  $('.fileupload').fileupload({
    dataType: 'json',
     add: function (e, data) {
         jqXHR = data.submit()
         $('.cancel').removeAttr('disabled')
     },  
    start: function(){
      console.log("started upload")
      $(this).parent().next().next().find('.progress-bar')
        .css('width','0');
    },
    progressall: function (e, data) {
        console.log(data)
        var progress = parseInt(data.loaded / data.total * 100, 10);
         $(this).parent().next().next().next().find('.progress-bar').css(
            'width',
            progress + '%'
        );
    },
    done: function() {
      refresh_datasets_tables();
      refresh_datatables();
    },

   fail: function() {
           console.log("cancelled upload")
           $(this).parent().next().next().find('.progress-bar')
             .css('width','0');
            }
     });
   console.log(jqXHR)
   $('.cancel').click(function (e) {
      jqXHR.abort();
    });
  
}

